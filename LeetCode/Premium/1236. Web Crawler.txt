/**
 * // This is the HtmlParser's API interface.
 * // You should not implement it, or speculate about its implementation
 * class HtmlParser {
 *     public List<String> GetUrls(String url) {}
 * }
 */
//Runtime 403 ms Beats 35.71% Memory 49.2 MB Beats 50%
using System.Threading.Tasks;
class Solution
{
    public IList<string> Crawl(string startUrl, HtmlParser htmlParser)
    {
        var visited = new HashSet<string>();
        var tasks = new HashSet<Task<IList<string>>>();
        tasks.Add(Task.Run(() => htmlParser.GetUrls(startUrl)));
        visited.Add(startUrl);
        var url = new Uri(startUrl);
        while (tasks.Count > 0)
        {
            var completedTask = Task.WhenAny(tasks).Result;
            tasks.Remove(completedTask);
            foreach(var nextUrl in completedTask.Result)
            {
                if (!visited.Contains(nextUrl) && nextUrl.Contains($"http://{url.Host}"))
                {
                    visited.Add(nextUrl);
                    tasks.Add(Task.Run(() => htmlParser.GetUrls(nextUrl)));
                }
            }

        }

        return visited.ToList();
    }
}