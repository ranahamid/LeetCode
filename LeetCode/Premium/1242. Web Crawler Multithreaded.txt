using System.Threading.Tasks;

/**
 * // This is the HtmlParser's API interface.
 * // You should not implement it, or speculate about its implementation
 * class HtmlParser {
 *     public List<String> GetUrls(String url) {}
 * }
 */
  //Runtime 594 ms Beats 62.7% Memory 50.7 MB Beats 96.55%
class Solution
{
    public IList<string> Crawl(string startUrl, HtmlParser htmlParser)
    {
        var tasks = new HashSet<Task<IList<string>>>();
        var visited = new HashSet<string>();
        var url = new Uri(startUrl);


        tasks.Add(Task.Run(() => htmlParser.GetUrls(startUrl)));
        visited.Add(startUrl);

        while (tasks.Count > 0)
        {
            var completedTasks = Task.WhenAny(tasks).Result;
            tasks.Remove(completedTasks);
            foreach (var nextUrl in completedTasks.Result)
            {
                if (!visited.Contains(nextUrl) && nextUrl.StartsWith($"http://{url.Host}"))
              //if (nextUrl.StartsWith($"http://{url.Host}") && !visited.Contains(nextUrl))
                    {
                    tasks.Add(Task.Run(() => htmlParser.GetUrls(nextUrl)));
                    visited.Add(nextUrl);
                }

            }
        }
        return visited.ToList();
    }
}