	//Runtime: 0 ms, faster than 100.00% of Go online submissions for Univalued Binary Tree.
    //Memory Usage: 2.4 MB, less than 10.00% of Go online submissions for Univalued Binary Tree.
    
	type TreeNode struct {
		Val   int
		Left  *TreeNode
		Right *TreeNode
	}

	func isUnivalTree(root *TreeNode) bool {
		var result = []int{}
		if root != nil {
			Traverse(root, &result)
		}
		for i := 1; i < len(result); i++ {
			if result[i-1] != result[i] {
				return false
			}
		}
		return true
	}

	func Traverse(current *TreeNode, result *[]int) {
		*result = append(*result, current.Val)
		if current.Left != nil {
			Traverse(current.Left, result)
		}
		if current.Right != nil {
			Traverse(current.Right, result)
		}
	}